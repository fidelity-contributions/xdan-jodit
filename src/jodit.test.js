describe('Jodit Editor', () => {
	describe('Module system', () => {
		it('Should have basic modules', () => {
			const modules = [
				'Ajax',
				'Alert',
				'Async',
				'Button',
				'CommitStyle',
				'Component',
				'Confirm',
				'ContextMenu',
				'Create',
				'Dialog',
				'Dom',
				'EventEmitter',
				'EventHandlersStore',
				'Eventify',
				'FileBrowser',
				'Helpers',
				'History',
				'Icon',
				'ImageEditor',
				'LazyWalker',
				'Plugin',
				'PluginSystem',
				'Popup',
				'ProgressBar',
				'Prompt',
				'Response',
				'STATUSES',
				'Selection',
				'Snapshot',
				'StatusBar',
				'Table',
				'ToolbarButton',
				'ToolbarCollection',
				'ToolbarContent',
				'ToolbarEditorCollection',
				'ToolbarSelect',
				'UIBlock',
				'UIButton',
				'UIButtonGroup',
				'UIButtonState',
				'UICheckbox',
				'UIElement',
				'UIFileInput',
				'UIForm',
				'UIGroup',
				'UIInput',
				'UIList',
				'UIMessages',
				'UISelect',
				'UISeparator',
				'UISpacer',
				'UITextArea',
				'UITooltip',
				'Uploader',
				'View',
				'ViewComponent',
				'ViewWithToolbar',
				'defaultNameSpace',
				'observable'
			];

			modules.forEach(moduleName => {
				expect(Jodit.modules[moduleName], 'Module: ' + moduleName).is
					.exist;
			});
		});
	});

	describe('Helpers system', () => {
		it('Should have basic helpers', () => {
			const helpers = [
				'$$',
				'abort',
				'alignElement',
				'alreadyLoadedList',
				'appendScriptAsync',
				'appendStyleAsync',
				'applyStyles',
				'asArray',
				'assert',
				'attr',
				'browser',
				'buildQuery',
				'call',
				'callPromise',
				'camelCase',
				'CamelCaseToKebabCase',
				'cleanFromWord',
				'clearAlign',
				'clearCenterAlign',
				'clearTimeout',
				'cns',
				'colorToHex',
				'completeUrl',
				'ConfigDeepFlatten',
				'ConfigFlatten',
				'ConfigProto',
				'connection',
				'ConnectionError',
				'convertMediaUrlToVideoEmbed',
				'css',
				'cssPath',
				'ctrlKey',
				'dataBind',
				'defaultLanguage',
				'error',
				'fastClone',
				'fuzzySearchIndex',
				'get',
				'getClassName',
				'getContentWidth',
				'getDataTransfer',
				'getScrollParent',
				'getXPathByElement',
				'hAlignElement',
				'hasBrowserColorPicker',
				'hasContainer',
				'htmlspecialchars',
				'humanSizeToBytes',
				'i18n',
				'innerWidth',
				'inView',
				'isAbort',
				'isAbortError',
				'isArray',
				'isAtom',
				'isBoolean',
				'isDestructable',
				'isEqual',
				'isFastEqual',
				'isFunction',
				'isHTML',
				'isHtmlFromWord',
				'isInitable',
				'isInt',
				'isJoditObject',
				'isLicense',
				'isMarker',
				'isNativeFunction',
				'isNumber',
				'isNumeric',
				'isPlainObject',
				'isPromise',
				'isSet',
				'isString',
				'isStringArray',
				'isURL',
				'isValidName',
				'isViewObject',
				'isVoid',
				'isWindow',
				'kebabCase',
				'keepNames',
				'keys',
				'LimitedStack',
				'loadImage',
				'loadNext',
				'loadNextStyle',
				'markAsAtomic',
				'markDeprecated',
				'markOwner',
				'memorizeExec',
				'nl2br',
				'normalizeColor',
				'normalizeCssNumericValue',
				'normalizeCssValue',
				'normalizeKeyAliases',
				'normalizeLicense',
				'normalizePath',
				'normalizeRelativePath',
				'normalizeSize',
				'normalizeUrl',
				'NUMBER_FIELDS_REG',
				'offset',
				'options',
				'OptionsError',
				'parseQuery',
				'position',
				'previewBox',
				'refs',
				'reset',
				'resolveElement',
				'safeHTML',
				'sanitizeHTMLElement',
				'scrollIntoViewIfNeeded',
				'set',
				'setTimeout',
				'size',
				'splitArray',
				'sprintf',
				'stringify',
				'stripTags',
				'toArray',
				'trim',
				'trimChars',
				'trimInv',
				'ucfirst'
			];

			helpers.forEach(helperName => {
				expect(
					Jodit.modules.Helpers[helperName],
					'Helper: ' + helperName
				).is.exist;
			});
		});
	});
});
